#! /usr/bin/env nix-shell
#! nix-shell -i bash -p bash
# BUG: Seems that PWD=/ when run as root. Is this a bug?

unlink_res() {
  if [ -L ./result ]; then
    echo "Build is in:"
    readlink result
    unlink result
  fi
}

if [ "$EUID" -ne 0 ]; then
  echo 'Must be run as SUDO'
  exit 5
fi

# Move to the nix-system-cfg-directory
if [ -z ${DOTFILES+x} ]; then
  echo 'Variable $DOTFILES must be set to run this script'
  echo 'Run sudo -E to keep user environment'
  exit 4
fi
cd $DOTFILES/nix/

# Remove config-path
NIX_PATH="$(echo $NIX_PATH | sed 's/:nixos-config=[^:]*//')"
# Add new config-path
NIX_PATH="$NIX_PATH:nixos-config=$(pwd)/src/configuration.nix"

# Add system packages such as `nixos-rebuild`
# XXX: Should fix a static import of `nixos-rebuild` since I might remove it
#      from the system environment
PATH="$PATH:/run/current-system/sw/bin"

echo "------------------------------"
echo "-- Building config -----------"
echo "------------------------------"

if nixos-rebuild build
then
  echo
  echo "Build completed successfully, what to do with it?"
  switchDesc='switch to it!'
  testDesc='test it out first!'
  bootDesc='setup boot entry!'

  select mode in "$switchDesc" "$testDesc" "$bootDesc" "nothing"; do break; done
  case "$mode" in
    "$switchDesc")
      echo "------------------------------"
      echo "-- Switching build -----------"
      echo "------------------------------"
      result/bin/switch-to-configuration switch
      ;;
    "$testDesc")
      echo "------------------------------"
      echo "-- Activating build ----------"
      echo "------------------------------"
      result/bin/switch-to-configuration test
      ;;
    "$bootDesc")
      echo "------------------------------"
      echo "-- Writing build -------------"
      echo "------------------------------"
      result/bin/switch-to-configuration switch
      ;;
    *)
      echo "Alright, doing nothing"
      ;;
  esac
fi

if [ ! -L result ]
then
  # The compilation must have failed
  exit 2
fi

unlink_res

