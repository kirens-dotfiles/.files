# BACKLOG
## GENERAL

  * ISO-builder to include step-by-step install program
  * look into using servo for emeded sites / webbrowser, sequrity aspects?
    Alternatively how to get Firefox to launch webiste in "kiosk-mode"
  * Figure out good note-takeing system for future events (i.e. FuM)
  * Instructions on how I write SMART todos (Herrrm... previous self)
  * Set up and start using task warrior
  * Make custom SUDO prompt to remind not to fall victim to phising

## TERMINAL EMULATOR

  * Enable opening an unbound tmux instance
  * Some way to force stop a locked up script in tmux

## ROFI

  * Speed up launch so first characters don't go uncaught
  * Integrate with task warrior

## HOME MANAGER

  * Use home-manager nixos module
  * Investigate if firefox extensions can be added through home-manager

## FISH

  * Complete nix-shell in a smart manner with pkgs lookup

## VIM

  * Code Completeion (specifically Haskell/Javascript/Python/Java)

## NIXOS

  * Use `--pure-eval` (https://github.com/NixOS/nix/commit/d4dcffd64349bb52ad5f1b184bee5cc7c2be73b4) to install system and then unpure while developing features.
  * mullvad vpn
  * Add i3lock-fancy-multimonitor to nixpkgs and install it
  * Generalize adding entry to extraGroups

## XMONAD

  * Special workspaces dedicated to a program
    - Some allways active like copyq
    - Others started when workspace is visited and keept alive till' user kills it
    - Third version closes when workspace is left.
    Should be developed in with respect to on-top custom layout suggestion
  * Make different Xmobars show different content
      Highlight what workspace is on the specific screen
      The title should be the active window on the specific screen
  * Don't fade "focused" window on each screen
  * Change Xmobar background color on the active screen
  * Quick access template workspaces
      (e.g. Test an idea ws for Haskell where two terminals launch,
      1 vim in /tmp/haskellTst/Tst.hs, one ghci with the file loaded)
  * Find a general solution to not loosing focus
    (i.e. make / use a `spawnBackground`)
  * Log program / workspace swiches with timestamps to calculate time spent
    with certain activites
  * Create typeclass for Keybinding to make script (? what did I mean) extendable
  * Custom Layout, allowing:
      On top - Fullscren / out of workspace programms (for things such as calendar, messaging, todos)
  * xscreensaver
  * Investigate xmobar coloring of mem% not working

 KEYBOARD

  * Create Prototype (Dactyl based)
    - Install and get familiar with OpanSCAD
    - Get familiar with printing
    - Print keyboard parts without modification
    - Order the needed parts
    - Build it
    - ...?


# ONGOING (Keep to minimum, try to complete or otherwise defer)


# DEFERED (should do but uncertain how to solve, await more time to research)

## GENERAL

  * Bluetooth headphones, low sound quality

## XMONAD

  * Only press Super to open dmenu

# TESTED/REJECTED/WONTFIX

  * Make nix-shell launch fish
  * using `logger` in some config-scipts?
  * Make a home-manager extension that allows styling of ST
  * Fix reloading uppon compile so that xmonad doesn't need to pollute userspace.
  * editTODO shortcut should autocommit + -push
  * Ctrl+BS as kill-word in fish
